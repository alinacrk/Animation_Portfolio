@import "../../global.scss";


.scroll1{
  background-color: rgb(90, 96, 96);
  height: 150px;
 
}
.works {
  
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  
}

.box1 {
  background-color: rgb(19, 19, 20);
  height: 50px;
  width: 300px;
  position: relative;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  a {
    color: rgb(250, 250, 250);
  font-size: 24px;
  text-decoration: underline;
  cursor: pointer;
  text-decoration: none;
  position: absolute;
   margin-top: 10px;
  display: grid;
  place-items: center;
  position: relative;
  @include mobile {
    font-size: 20px;
   margin-top: 20px;
	  }
}
  
 
}

.container {
  height: 40%;
  margin-top: 10%;
  display: grid;
  place-items: center;
  position: relative;
  @include mobile {
		height: 20%;
    display: grid;
  place-items: center;
  position: relative;


	  }
	
}

.box {
  position: relative;
  
  --border-size: 10px;
  --border-angle: 0turn;
  width: 60vmin;
  height: 10vmin;
  background-image: conic-gradient(
      from var(--border-angle),
      rgb(19, 19, 20),
      rgb(19, 19, 20) 50%,
      rgb(19, 19, 20)
    ),
    conic-gradient(from var(--border-angle), transparent 50%, rgb(60, 62, 63), rgb(255, 255, 255));
  background-size: calc(100% - (var(--border-size) * 2))
      calc(100% - (var(--border-size) * 2)),
    cover;
  background-position: center center;
  background-repeat: no-repeat;

  animation: bg-spin 3s linear infinite;
  .a1 {
    color: rgb(250, 250, 250);
  font-size: 24px;
  text-decoration: underline;
  cursor: pointer;
  text-decoration: none;
  position: absolute;
   margin-top: 30px;
  display: grid;
  place-items: center;
  position: relative;

  

  @include mobile {
    font-size: 20px;
   margin-top: 20px;
	  }
  
}
 

  
  @keyframes bg-spin {
    to {
      --border-angle: 1turn;
    }
  }

  &:hover {
    animation-play-state: paused;
  }
}

@property --border-angle {
  syntax: "<angle>";
  inherits: true;
  initial-value: 0turn;
}
